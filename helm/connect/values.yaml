# Default values for connect.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: debezium/connect
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8083

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

env:
    GROUP_ID: 1
    CONFIG_STORAGE_TOPIC: connect-config
    OFFSET_STORAGE_TOPIC: connect-offset
    STATUS_STORAGE_TOPIC: connect-status
    BOOTSTRAP_SERVERS: kafka:9092
    LOG_LEVEL: INFO

argsTemplate: |-
  - -v
  - -f
  - -i
  - -X
  - POST
  - -H
  - Content-Type:application/json
  - 'http://{{ include "connect.fullname" . }}.{{.Release.Namespace}}.svc.cluster.local:{{ .Values.service.port }}/connectors/'
  - -d
  - {{ tpl .Values.connectorTemplate . | toJson }}

connectorTemplate: |-
  {
    "name": "cdc-connector", 
    "config": {
      "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
      "tasks.max": "1",
      "database.hostname": "postgresql",
      "database.port": "5432",
      "database.user": "postgres",
      "database.password": "postgres",
      "database.dbname" : "postgres",
      "database.server.name": "postgresql",
      "tombstones.on.delete" : "false",
      "database.whitelist": "postgres",
      "plugin.name": "pgoutput"
    }
  }
